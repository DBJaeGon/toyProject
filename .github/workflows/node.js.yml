
# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: github build action CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    defaults:
      run: 
        working-directory: client

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'
        cache: 'npm'

    - name: Npm version
      run: npm -v

    # - name: Cache dependencies
    #   id: node-modules-cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ~/.npm
    #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-node-
    - name: Install Dependencies
      run: npm install
      
    - name: Build
      env: 
        REACT_APP_GOOGLE_CLIENT_ID: ${{secrets.REACT_APP_GOOGLE_CLIENT_ID}}
      run: npm run build

    - name: tar
      run: cd .. && tar -cvf ./toy.tar --exclude='.git' --exclude='.github' --exclude='./client/node_modules' --exclude='README.md' ./*

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }} 
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ../toy.tar s3://toy-storage/node-deploy/toy.tar
      
    - name: Code Deploy
      run: aws deploy create-deployment --application-name toy-CodeDeploy-Github --deployment-group-name toy-S3-Group --file-exists-behavior OVERWRITE --s3-location bucket=toy-storage,bundleType=tar,key=node-deploy/toy.tar
