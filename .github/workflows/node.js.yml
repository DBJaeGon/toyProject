
# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: github build action CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    defaults:
      run: 
        working-directory: client

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        cache: 'npm'
    
    - name: Cache dependencies
      id: node-modules-cache
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Dependencies
      run: npm install
      
    - name: Build
      env: 
        REACT_APP_GOOGLE_CLIENT_ID: ${{secrets.REACT_APP_GOOGLE_CLIENT_ID}}
      run: npm run build

    -name: Zip
     run: cd .. && tar -cvf toy.tar --exclude='.git' --exclude='.github' --exclude='./client/node_modules' ./*

    - name: AWS S3 Upload
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --follow-symlinks --delete --exclude 'client/node_modules/*' --exclude '.git/*' --exclude '.github/*'
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        DEST_DIR: ${{ secrets.DEST_DIR }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_REGION: 'ap-northeast-2'   
        SOURCE_DIR: '/home/runner/work/toyProject/toyProject'  

    - name: AWS CodeDeploy
      uses: sourcetoad/aws-codedeploy-action@v1
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        aws_region: ap-northeast-2
        codedeploy_name: ${{ secrets.AWS_CODEDEPLOY_APP_NAME }}
        codedeploy_group: ${{ secrets.AWS_CODEDEPLOY_GROUP }}
        codedeploy_register_only: true
        s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
        s3_folder: ${{ secrets.DEST_DIR }}
